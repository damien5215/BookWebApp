
@{
    ViewBag.Title = "Extra";
}


<br>
<div class="row">
    <div class="col-md-6">
        <h3>Products Page</h3>
        <img class="devBlog" src="~/Images/page1.png" />
    </div>
    <div class="col-md-6">
        <h3>Main Features</h3>
        <br>
        <p><b>DROPDOWN LIST</b> <br>The user can filter the list of books via the author's name. It is a form which posts the AuthorID back to the server.</p>
        <p><b>BOOK LIST</b> <br>The page displays a list of the books in the database.</p>
        <p><b>CART LIST</b> <br>The page displays a list of the books in the cart which can be updated and is a partial page.</p>
        <p><b>TOTAL COST</b> <br>The page displays the total cost of the items in the cart. It is a partial page.</p>
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-12">
        <h3>Database Scheme Diagram</h3>
        <img class="devBlog" src="~/images/db02.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Context</h3>
        <img class="devBlog" src="~/images/context1.png" />
    </div>
    <div class="col-md-6">
        <h3>Base Controller</h3>
        <img class="devBlog" src="~/images/products01.png" />
    </div>
</div>


<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>BooksController: Products()</h3>
        <img class="devBlog" src="~/images/productsController01.png" />
    </div>
    <div class="col-md-6">
        <h3>ProductsViewmodel</h3>
        <img class="devBlog" src="~/images/ProductsViewModel.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>BooksBaseViewModel</h3>
        <img class="devBlog" src="~/images/Products06.png" />
    </div>
    <div class="col-md-6">
        <h3>Repository: GetAuthorList() + GetProducts()</h3>
        <img class="devBlog" src="~/images/Products04a.png" />
    </div>
</div>


<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Products View: Drop Down and TotalCost</h3>
        <img class="devBlog" src="~/images/Products07.png" />
    </div>
    <div class="col-md-6">
        <h3>Products View: List of Books</h3>
        <img class="devBlog" src="~/images/products08.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Products View: Cart Partial View</h3>
        <img class="devBlog" src="~/images/Products09.png" />
    </div>
    <div class="col-md-6">
        <h3>CartController: _Cart()</h3>
        <img class="devBlog" src="~/images/products10.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Repository: "GetCart()"</h3>
        <img class="devBlog" src="~/images/RepoGetCart.png" />
    </div>
    <div class="col-md-6">
        <h3>Repository: "GetCart()"</h3>
        <p>This _Cart action method retrieves the full list of cart objects from the repository, loads it to the variable "books" and then sends this object to the partial view.</p>
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Partial View: "_Cart"</h3>
        <img class="devBlog" src="~/images/Products11.png" />
    </div>
    <div class="col-md-6">
        <h3>Rendered HTML for "_Cart"</h3>
        <img class="devBlog" src="~/images/cartDisplay.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>TotalCostViewModel</h3>
        <img class="devBlog" src="~/images/totalCost01.png" />
    </div>
    <div class="col-md-6">
        <h3>Cart Controller: "_TotalCost()"</h3>
        <img class="devBlog" src="~/images/totalCost02.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Partial View: "_TotalCost"</h3>
        <img class="devBlog" src="~/images/totalCost03.png" />
    </div>
    <div class="col-md-6">
        <h3>ViewBag vs ViewModel</h3>
        <p>Initially I used ViewBag to hold the calculated "total price" value and send it to the view.</p>
        <p>I replaced this with a ViewModel which only has one property and a constructor.</p>
        <p>It inherits from the Base ViewModel however this is not necessary as it doesn't need any of the properties or methods defined in the base ViewModel.</p>
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Products View: ActionLink (.../Cart/Add/Id)</h3>
        <img class="devBlog" src="~/images/AddFunction1.png" />
    </div>
    <div class="col-md-6">
        <h3>ActionLink: Rendered HTML</h3>
        <img class="devBlog" src="~/images/AddFunction2.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Products View: ActionLink (.../Cart/Add/Id)</h3>
        <img class="devBlog" src="~/images/AddFunction3.png" />
    </div>
    <div class="col-md-6">
        <h3>CartController: Add(id), Get Data</h3>
        <img class="devBlog" src="~/images/add01.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>CartController: Add(id), If "Cart is NULL"</h3>
        <img class="devBlog" src="~/images/add02.png" />
    </div>
    <div class="col-md-6">
        <h3>CartController: Add(id)</h3>
        <p>var book, holds the data for a specific book object with the id that was passed into the Add() method.</p>
        <p>var cart, holds the data for a specifc cart object with the id that was passed into the Add() method.</p>
        <p>var cartList, holds a list of all of the cart objects in the cart.</p>
        <p>If "var cart" is null then it could not find the item in the cart table so a new cart object is constructed and added to the cart table.</p>

    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>CartController: Add(id), Else "Increment Quantity"</h3>
        <img class="devBlog" src="~/images/add03.png" />
    </div>
    <div class="col-md-6">
        <h3>Repository: EditCart(Cart)</h3>
        <img class="devBlog" src="~/images/editCart.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>CartController: Add(id), Else "Increment Quantity"</h3>
        <img class="devBlog" src="~/images/ProductsPOST1.png" />
    </div>
    <div class="col-md-6">
        <h3>Repository: EditCart(Cart)</h3>
        <img class="devBlog" src="~/images/ProductsPOST2.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>Added EF Migration (BookShared)</h3>
        <img class="devBlog" src="~/images/mig03.png" />
    </div>
    <div class="col-md-6">
        <h3>"202106281332275_Initial"</h3>
        <p>I enabled ef migrations and then added an "initial" migration.</p>
        <p>When the database is upgraded, the database is created, empty.</p>
        <p>When the database is downgraded, the database is dropped.</p>
        <p>The seed method in the configuration puts test data into the database that I'm using locally.</p>
        <p>Whenever I deploy this webapp, I comment out the "seed data" in the seed method show below.</p>
        <p>This ensures that the test data doesn't interfere with the data in the server database.</p>
        <p>I also created a .bak file for the server database in case I need to restore the server database.</p>
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>202106281332275_Initial.cs</h3>
        <img class="devBlog" src="~/images/mig01.png" />
    </div>
    <div class="col-md-6">
        <h3>Configuration.cs</h3>
        <img class="devBlog" src="~/images/mig02.png" />
    </div>
</div>

<br>
<hr>
<div class="row">
    <div class="col-md-6">
        <h3>KNOWN ISSUES</h3>
        <p>When adding a book to the cart, all that needs to be updated is the partial view, "_Cart" however currently the whole page is rendered.</p>
        <p>On ".../Books/Products" page, the selected dropdown value resets when an item is added to the cart.</p>
        <p>Currently there isn't a controller for Authors.</p>
        <p>For the CRUD page (.../Books/Index) client and server validation needs to be implemented.</p>
    </div>
    <div class="col-md-6">
    </div>
</div>



<br>
<br>
<br>
<br>
<br>
<br>

